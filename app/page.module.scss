/** @define Home */

@use '@/styles/functions/px-to-rem' as *;
@use '@/styles/mixins/layout-grid';
@use '@/styles/variables';

.Home {
  align-items: center;
  background-image: linear-gradient(
      to right,
      rgba(#808080, 0.0625),
      transparent
    ),
    radial-gradient(rgba(#808080, 0.0625), transparent);
  display: flex;
  flex-direction: column;
  height: auto;
  justify-content: center;
  min-height: 100vh;
  width: 100%;
}

.Home-inner {
  @include layout-grid.max-width;
  @include layout-grid.page-margins();

  align-items: center;
  display: flex;
  justify-content: center;
  padding-bottom: (variables.$margin-bottom * 3);
  padding-top: (variables.$margin-top * 3);

  @supports (padding: max(0px)) {
    padding-bottom: max(
      #{(variables.$margin-bottom * 3)},
      env(safe-area-inset-bottom)
    );
    padding-top: max(#{(variables.$margin-top * 3)}, env(safe-area-inset-top));
  }

  @media (min-width: variables.$breakpoint-small) {
    padding-bottom: (variables.$margin-bottom-small * 2);
    padding-top: (variables.$margin-top-small * 2);

    @supports (padding: max(0px)) {
      padding-bottom: max(
        #{(variables.$margin-bottom-small * 2)},
        env(safe-area-inset-bottom)
      );
      padding-top: max(
        #{(variables.$margin-top-small * 2)},
        env(safe-area-inset-top)
      );
    }
  }

  @media (min-width: variables.$breakpoint-medium) {
    padding-bottom: var(--margin-bottom);
    padding-top: var(--margin-top);

    @supports (padding: max(0px)) {
      padding-bottom: max(var(--margin-bottom), env(safe-area-inset-bottom));
      padding-top: max(var(--margin-top), env(safe-area-inset-top));
    }
  }
}
